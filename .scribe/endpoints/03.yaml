name: Users
endpoints:
  - uri: /users
    httpMethods:
      - GET
    metadata:
      title: View all users
      description: >-
        [TODO] This endpoint uses a custom Scribe strategy that parses a

        `@usesPagination` annotation to add some query parameters.


        The sample response is gotten by Scribe making a test API call (aka
        "response call").
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: {}
    queryParameters: {}
    bodyParameters: {}
    responses:
      - status: 200
        description: ''
        headers:
          access-control-allow-origin: '*'
          content-type: application/json; charset=utf-8
        content: |-
          {
              "data": [
                  {
                      "id": 1,
                      "name": "Jessie Medhurst",
                      "email": "Johnathan_Purdy36@gmail.com",
                      "emailVerifiedAt": "2021-06-18T16:35:57.558Z",
                      "password": "$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi",
                      "createdAt": "2021-06-18T16:35:57.560Z",
                      "updatedAt": "2021-06-18T16:35:57.560Z"
                  }
              ]
          }
    responseFields: {}
  - uri: '/users/:id'
    httpMethods:
      - GET
    metadata:
      title: Fetch a user
      description: The 404 sample is gotten from a "response file".
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        example: '05'
        required: true
        description: The ID of the user.
        type: string
        match: ':id(\d+)'
        placeholder: ':id'
    queryParameters: {}
    bodyParameters: {}
    responses:
      - status: 200
        description: ''
        headers:
          access-control-allow-origin: '*'
          content-type: application/json; charset=utf-8
        content: |-
          {
              "dara": {
                  "id": 1,
                  "name": "Jessie Medhurst",
                  "email": "Johnathan_Purdy36@gmail.com",
                  "emailVerifiedAt": "2021-06-18T16:35:57.558Z",
                  "password": "$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi",
                  "createdAt": "2021-06-18T16:35:57.560Z",
                  "updatedAt": "2021-06-18T16:35:57.560Z",
                  "SideProjects": [
                      {
                          "id": 1,
                          "name": "Product Group Developer",
                          "description": "Ea ea earum aspernatur recusandae eum ut et.",
                          "url": null,
                          "dueAt": "2021-06-19T07:02:53.289Z",
                          "createdAt": "2021-06-18T16:35:57.575Z",
                          "updatedAt": "2021-06-18T16:35:57.575Z",
                          "UserId": 1
                      }
                  ]
              }
          }
      - content: |-
          {
              "message": "Not found",
              "resource": "user"
          }
        status: 404
        description: '404, User not found'
    responseFields: {}
  - uri: /users
    httpMethods:
      - POST
    metadata:
      title: Create a user
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: {}
    queryParameters: {}
    bodyParameters: {}
    responses: []
    responseFields: {}
  - uri: '/users/:id/auth'
    httpMethods:
      - POST
    metadata:
      title: Authenticate
      description: "Get a new API token.\n\n<aside>Yes, we know you can impersonate any user.\U0001F644</aside>"
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        example: '3'
        required: true
        description: The ID of the user.
        type: integer
        match: ':id(\d+)'
        placeholder: ':id'
    queryParameters: {}
    bodyParameters: {}
    responses:
      - content: |-
          {
              "token": "2|KLDoUXc68Ko0JaFDZoX9qYkUqWglwdGxQsvTGBCg"
          }
        status: 200
        description: '200'
    responseFields:
      token:
        name: token
        type: ''
        description: The new API token. Valid forever.
